syntax = "proto3";
package server;

option go_package = "github.com/moderato-app/live-pprof/api";

service Metrics {
  rpc HeapMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc CPUMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc AllocsMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc GoroutineMetrics(GoMetricsRequest) returns (GoMetricsResponse);
}

// MockMetrics returns mock data instead of real data to save development time
service MockMetrics {
  rpc HeapMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc CPUMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc AllocsMetrics(GoMetricsRequest) returns (GoMetricsResponse);
  rpc GoroutineMetrics(GoMetricsRequest) returns (GoMetricsResponse);
}

service General {
  rpc DetectURL(DetectURLRequest) returns (stream DetectURLResponse);
}

message GoMetricsRequest {
  string url = 1;
  // cpu profile only
  uint64 profile_seconds = 2;
}

message GoMetricsResponse {
  int64 date = 1;
  repeated Item items = 2;
  int64  total = 3;
}

message Item {
  string func = 1;
  string line = 2;
  int64 flat = 3 ;
  int64 cum = 4;
}

message DetectURLRequest {
  string url = 1;
}

message DetectURLResponse {
  string endpoint = 1;

  optional HTTPResult httpResult = 2;
  optional string error = 4;
}

message HTTPResult{
  int32 statusCode = 1;
  string statusText = 2;
  optional string body = 3;
}